// Generated by CoffeeScript 1.6.1
(function() {
  var ErrorMessageView, LinkSuccessView, MainBitlyView, show_error_msg,
    _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ErrorMessageView = (function(_super) {

    __extends(ErrorMessageView, _super);

    function ErrorMessageView() {
      var _this = this;
      this.render = function() {
        return ErrorMessageView.prototype.render.apply(_this, arguments);
      };
      this.initialize = function() {
        return ErrorMessageView.prototype.initialize.apply(_this, arguments);
      };
      return ErrorMessageView.__super__.constructor.apply(this, arguments);
    }

    ErrorMessageView.prototype.initialize = function() {
      this.template = $('#error_msg_tmpl').template();
      this.render();
      return this;
    };

    ErrorMessageView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        heading: this.options.heading,
        message: this.options.message
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    return ErrorMessageView;

  })(Backbone.View);

  LinkSuccessView = (function(_super) {

    __extends(LinkSuccessView, _super);

    function LinkSuccessView() {
      var _this = this;
      this.render = function() {
        return LinkSuccessView.prototype.render.apply(_this, arguments);
      };
      this.initialize = function() {
        return LinkSuccessView.prototype.initialize.apply(_this, arguments);
      };
      return LinkSuccessView.__super__.constructor.apply(this, arguments);
    }

    LinkSuccessView.prototype.initialize = function() {
      this.template = $('#link_success_tmpl').template();
      this.render();
      return this;
    };

    LinkSuccessView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        short_url: this.options.short_url
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    return LinkSuccessView;

  })(Backbone.View);

  MainBitlyView = (function(_super) {

    __extends(MainBitlyView, _super);

    function MainBitlyView() {
      var _this = this;
      this.get_short_url = function() {
        return MainBitlyView.prototype.get_short_url.apply(_this, arguments);
      };
      this.events = function() {
        return MainBitlyView.prototype.events.apply(_this, arguments);
      };
      this.render = function() {
        return MainBitlyView.prototype.render.apply(_this, arguments);
      };
      this.initialize = function() {
        return MainBitlyView.prototype.initialize.apply(_this, arguments);
      };
      return MainBitlyView.__super__.constructor.apply(this, arguments);
    }

    MainBitlyView.prototype.initialize = function() {
      this.template = $('#main_bitly_tmpl').template();
      this.render();
      return this;
    };

    MainBitlyView.prototype.render = function() {
      return $(this.el).html($.tmpl(this.template));
    };

    MainBitlyView.prototype.events = function() {
      return {
        'click #submit_btn': 'get_short_url'
      };
    };

    MainBitlyView.prototype.get_short_url = function() {
      $('#messages').html('');
      $('#submit_btn').button('loading');
      if ($.trim($('#main_link').val()).length === 0) {
        $('#submit_btn').button('reset');
        return show_error_msg('URL Missing', 'You have not entered a URL to shorten. Please enter a URL');
      } else {
        return $.ajax({
          url: '/get_short_url',
          data: {
            url: $.trim($('#main_link').val())
          },
          type: 'POST',
          dataType: 'json',
          success: function(response) {
            var view, view_dict;
            $('#submit_btn').button('reset');
            if (response.success) {
              view_dict = {
                short_url: response.data.short_url
              };
              view = new LinkSuccessView(view_dict);
              return $(view.el).appendTo('#messages');
            } else {
              return show_error_msg('Error', response.reason);
            }
          },
          error: function(obj, txt) {
            $('#submit_btn').button('reset');
            return show_error_msg('Error', txt);
          }
        });
      }
    };

    return MainBitlyView;

  })(Backbone.View);

  show_error_msg = function(heading, message) {
    var view, view_dict;
    view_dict = {
      heading: heading,
      message: message
    };
    $('#messages').html('');
    view = new ErrorMessageView(view_dict);
    return $(view.el).appendTo('#messages');
  };

  window.MainBitlyView = MainBitlyView;

}).call(this);
